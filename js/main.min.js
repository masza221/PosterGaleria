
try {
  const splide = new Splide(".splide", {
    type: "loop",
    perPage: 4,
    focus: "center",
    autoplay: !0,
    gap: "1rem",
    pagination: !1,
    interval: 2500,
    speed: 1e3,
    arrows: !1,
    focus: "number",
    breakpoints: {
      992: { perPage: 3 },
      640: { perPage: 2 },
      480: { perPage: 1, focus: "center" },
    },
  });
  splide.mount();
}
catch (e) {
  if(e.message == "Splide is not defined"){
    
  }
  else {
    console.log("Error: " + e.message);
  }
}



  document.addEventListener("DOMContentLoaded", function () {
    const a = document.querySelectorAll("[data-fade]"),
      b = new IntersectionObserver(
        function (a, b) {
          a.forEach((a) => {
            if (!a.isIntersecting) return;
            else {
              const c = a.target.getAttribute("data-fade"),
                d = a.target.getAttribute("data-fade-speed") || "0.8s",
                e = a.target.getAttribute("data-fade-delay") || "0s";
              switch (c) {
                case "left":
                  a.target.style.animation = `fade-left ${d} ease-in-out forwards ${e}`;
                  break;
                case "right":
                  a.target.style.animation = `fade-right ${d} ease-in-out forwards ${e}`;
                  break;
                case "up":
                  a.target.style.animation = `fade-up ${d} ease-in-out forwards ${e}`;
                  break;
                case "down":
                  a.target.style.animation = `fade-down ${d} ease-in-out forwards ${e}`;
                  break;
                case "in":
                  a.target.style.animation = `fade-in ${d} ease-in-out forwards ${e}`;
                  break;
                default:
                  a.target.style.animation = `fade-up ${d} ease-in-out forwards ${e}`;
              }
              b.unobserve(a.target);
            }
          });
        },
        { threshold: 0, rootMargin: "0px 0px -100px 0px" }
      );
    a.forEach((a) => {
      b.observe(a);
    });
  });
