const defaultLocale="pl";let locale,translations={},translating=!1;const supportedLocales=["en","pl","de","fr"],langButtons=document.querySelectorAll(".langs__item");langButtons.forEach(a=>{a.addEventListener("click",a=>{if(!translating){translating=!0;const b=a.target.getAttribute("data-value");if(b===locale)return translating=!1;setLocale(b),localStorage.setItem("locale",b)}})});function getLocalefromStorage(){return localStorage.getItem("locale")}document.addEventListener("DOMContentLoaded",()=>{const a=getLocalefromStorage()||supportedOrDefault(browserLocales(!0));setLocale(a)});function isSupported(a){return-1<supportedLocales.indexOf(a)}function supportedOrDefault(a){return a.find(isSupported)||defaultLocale}function browserLocales(a=!1){return navigator.languages.map(b=>a?b.split("-")[0]:b)}async function setLocale(a){if(a!==locale){const b=await fetchTranslationsFor(a);locale=a,translations=b,translatePage()}}async function fetchTranslationsFor(a){const b=await fetch(`../langs/${getFolderName()}/${a}.json`);return await b.json()}function getFolderName(){const a=window.location.pathname,b=a.split("/").pop();let c=b.split(".")[0];return""===c&&(c="index"),c}function translatePage(){document.querySelectorAll("[data-lang]").forEach(translateElement),createPopup(),translating=!1}function translateElement(a){const b=a.getAttribute("data-lang"),c=translations[b];a.innerText=c}function createPopup(){if(!translating)return;document.querySelector(".popup")&&document.querySelector(".popup").remove();const a=document.createElement("div"),b=translations.message;a.classList.add("popup"),a.innerHTML=`
    <div class="Message Message--green">
      <div class="Message-icon"> &#10003;</div>
      <div class="Message-body">
        <p>${b}</p>
      </div>
    </div>
  `,document.querySelector("body").appendChild(a),setTimeout(()=>{a.remove()},4e3)}